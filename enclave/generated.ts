export const awbRegistryAbi = [
  {
    type: "constructor",
    inputs: [
      { name: "_name", internalType: "string", type: "string" },
      { name: "_symbol", internalType: "string", type: "string" },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "address", type: "address" }],
    name: "addressToUser",
    outputs: [{ name: "userAddress", internalType: "address", type: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "agentIdToAgent",
    outputs: [
      { name: "id", internalType: "uint256", type: "uint256" },
      { name: "daoGovernor", internalType: "address", type: "address" },
      { name: "daoToken", internalType: "address", type: "address" },
      { name: "tokenURI", internalType: "string", type: "string" },
      { name: "runPrice", internalType: "uint256", type: "uint256" },
      { name: "active", internalType: "bool", type: "bool" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "agents",
    outputs: [
      { name: "id", internalType: "uint256", type: "uint256" },
      { name: "daoGovernor", internalType: "address", type: "address" },
      { name: "daoToken", internalType: "address", type: "address" },
      { name: "tokenURI", internalType: "string", type: "string" },
      { name: "runPrice", internalType: "uint256", type: "uint256" },
      { name: "active", internalType: "bool", type: "bool" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [
      { name: "to", internalType: "address", type: "address" },
      { name: "tokenId", internalType: "uint256", type: "uint256" },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [{ name: "owner", internalType: "address", type: "address" }],
    name: "balanceOf",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "address", type: "address" }],
    name: "balances",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [
      { name: "_agentId", internalType: "uint256", type: "uint256" },
      { name: "_origin", internalType: "address", type: "address" },
      { name: "_request", internalType: "string", type: "string" },
      { name: "_result", internalType: "string", type: "string" },
      { name: "_resultURI", internalType: "string", type: "string" },
    ],
    name: "createAndFulfillRequest",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "address", type: "address" }],
    name: "daoGovernorToAgent",
    outputs: [
      { name: "id", internalType: "uint256", type: "uint256" },
      { name: "daoGovernor", internalType: "address", type: "address" },
      { name: "daoToken", internalType: "address", type: "address" },
      { name: "tokenURI", internalType: "string", type: "string" },
      { name: "runPrice", internalType: "uint256", type: "uint256" },
      { name: "active", internalType: "bool", type: "bool" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    inputs: [
      { name: "_requestId", internalType: "uint256", type: "uint256" },
      { name: "_result", internalType: "string", type: "string" },
      { name: "_resultURI", internalType: "string", type: "string" },
    ],
    name: "fulfillRequest",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "address", type: "address" }],
    name: "fulfillerAddressToFulfiller",
    outputs: [
      { name: "name", internalType: "string", type: "string" },
      { name: "description", internalType: "string", type: "string" },
      { name: "fulfillerAddress", internalType: "address", type: "address" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "fulfillers",
    outputs: [
      { name: "name", internalType: "string", type: "string" },
      { name: "description", internalType: "string", type: "string" },
      { name: "fulfillerAddress", internalType: "address", type: "address" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "_id", internalType: "uint256", type: "uint256" }],
    name: "getAgentById",
    outputs: [
      {
        name: "",
        internalType: "struct AWBRegistry.Agent",
        type: "tuple",
        components: [
          { name: "id", internalType: "uint256", type: "uint256" },
          { name: "daoGovernor", internalType: "address", type: "address" },
          { name: "daoToken", internalType: "address", type: "address" },
          { name: "tokenURI", internalType: "string", type: "string" },
          { name: "runPrice", internalType: "uint256", type: "uint256" },
          { name: "requestIds", internalType: "uint256[]", type: "uint256[]" },
          { name: "active", internalType: "bool", type: "bool" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "getAllAgents",
    outputs: [
      {
        name: "",
        internalType: "struct AWBRegistry.Agent[]",
        type: "tuple[]",
        components: [
          { name: "id", internalType: "uint256", type: "uint256" },
          { name: "daoGovernor", internalType: "address", type: "address" },
          { name: "daoToken", internalType: "address", type: "address" },
          { name: "tokenURI", internalType: "string", type: "string" },
          { name: "runPrice", internalType: "uint256", type: "uint256" },
          { name: "requestIds", internalType: "uint256[]", type: "uint256[]" },
          { name: "active", internalType: "bool", type: "bool" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "getAllFulfillers",
    outputs: [
      {
        name: "",
        internalType: "struct AWBRegistry.Fulfiller[]",
        type: "tuple[]",
        components: [
          { name: "name", internalType: "string", type: "string" },
          { name: "description", internalType: "string", type: "string" },
          {
            name: "fulfillerAddress",
            internalType: "address",
            type: "address",
          },
          { name: "requestIds", internalType: "uint256[]", type: "uint256[]" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "getAllRequests",
    outputs: [
      {
        name: "",
        internalType: "struct AWBRegistry.Request[]",
        type: "tuple[]",
        components: [
          { name: "id", internalType: "uint256", type: "uint256" },
          { name: "agentId", internalType: "uint256", type: "uint256" },
          { name: "origin", internalType: "address", type: "address" },
          { name: "request", internalType: "string", type: "string" },
          { name: "fulfilled", internalType: "bool", type: "bool" },
          { name: "result", internalType: "string", type: "string" },
          { name: "resultURI", internalType: "string", type: "string" },
          { name: "price", internalType: "uint256", type: "uint256" },
          { name: "fulfiller", internalType: "address", type: "address" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "getAllUsers",
    outputs: [
      {
        name: "",
        internalType: "struct AWBRegistry.User[]",
        type: "tuple[]",
        components: [
          { name: "userAddress", internalType: "address", type: "address" },
          { name: "requestIds", internalType: "uint256[]", type: "uint256[]" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "tokenId", internalType: "uint256", type: "uint256" }],
    name: "getApproved",
    outputs: [{ name: "", internalType: "address", type: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "_address", internalType: "address", type: "address" }],
    name: "getFulfillerByAddress",
    outputs: [
      {
        name: "",
        internalType: "struct AWBRegistry.Fulfiller",
        type: "tuple",
        components: [
          { name: "name", internalType: "string", type: "string" },
          { name: "description", internalType: "string", type: "string" },
          {
            name: "fulfillerAddress",
            internalType: "address",
            type: "address",
          },
          { name: "requestIds", internalType: "uint256[]", type: "uint256[]" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "_id", internalType: "uint256", type: "uint256" }],
    name: "getRequestById",
    outputs: [
      {
        name: "",
        internalType: "struct AWBRegistry.Request",
        type: "tuple",
        components: [
          { name: "id", internalType: "uint256", type: "uint256" },
          { name: "agentId", internalType: "uint256", type: "uint256" },
          { name: "origin", internalType: "address", type: "address" },
          { name: "request", internalType: "string", type: "string" },
          { name: "fulfilled", internalType: "bool", type: "bool" },
          { name: "result", internalType: "string", type: "string" },
          { name: "resultURI", internalType: "string", type: "string" },
          { name: "price", internalType: "uint256", type: "uint256" },
          { name: "fulfiller", internalType: "address", type: "address" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "_address", internalType: "address", type: "address" }],
    name: "getUserByAddress",
    outputs: [
      {
        name: "",
        internalType: "struct AWBRegistry.User",
        type: "tuple",
        components: [
          { name: "userAddress", internalType: "address", type: "address" },
          { name: "requestIds", internalType: "uint256[]", type: "uint256[]" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [
      { name: "owner", internalType: "address", type: "address" },
      { name: "operator", internalType: "address", type: "address" },
    ],
    name: "isApprovedForAll",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "name",
    outputs: [{ name: "", internalType: "string", type: "string" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "tokenId", internalType: "uint256", type: "uint256" }],
    name: "ownerOf",
    outputs: [{ name: "", internalType: "address", type: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [
      { name: "_daoToken", internalType: "address", type: "address" },
      { name: "_tokenURI", internalType: "string", type: "string" },
      { name: "_runPrice", internalType: "uint256", type: "uint256" },
    ],
    name: "registerAgent",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [
      { name: "_name", internalType: "string", type: "string" },
      { name: "_description", internalType: "string", type: "string" },
    ],
    name: "registerFulfiller",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [],
    name: "registerUser",
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "requestIdToRequest",
    outputs: [
      { name: "id", internalType: "uint256", type: "uint256" },
      { name: "agentId", internalType: "uint256", type: "uint256" },
      { name: "origin", internalType: "address", type: "address" },
      { name: "request", internalType: "string", type: "string" },
      { name: "fulfilled", internalType: "bool", type: "bool" },
      { name: "result", internalType: "string", type: "string" },
      { name: "resultURI", internalType: "string", type: "string" },
      { name: "price", internalType: "uint256", type: "uint256" },
      { name: "fulfiller", internalType: "address", type: "address" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "requests",
    outputs: [
      { name: "id", internalType: "uint256", type: "uint256" },
      { name: "agentId", internalType: "uint256", type: "uint256" },
      { name: "origin", internalType: "address", type: "address" },
      { name: "request", internalType: "string", type: "string" },
      { name: "fulfilled", internalType: "bool", type: "bool" },
      { name: "result", internalType: "string", type: "string" },
      { name: "resultURI", internalType: "string", type: "string" },
      { name: "price", internalType: "uint256", type: "uint256" },
      { name: "fulfiller", internalType: "address", type: "address" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [
      { name: "from", internalType: "address", type: "address" },
      { name: "to", internalType: "address", type: "address" },
      { name: "tokenId", internalType: "uint256", type: "uint256" },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [
      { name: "from", internalType: "address", type: "address" },
      { name: "to", internalType: "address", type: "address" },
      { name: "tokenId", internalType: "uint256", type: "uint256" },
      { name: "data", internalType: "bytes", type: "bytes" },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [
      { name: "operator", internalType: "address", type: "address" },
      { name: "approved", internalType: "bool", type: "bool" },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [
      { name: "_agentId", internalType: "uint256", type: "uint256" },
      { name: "_request", internalType: "string", type: "string" },
      { name: "_origin", internalType: "address", type: "address" },
    ],
    name: "submitRequest",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [{ name: "interfaceId", internalType: "bytes4", type: "bytes4" }],
    name: "supportsInterface",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "symbol",
    outputs: [{ name: "", internalType: "string", type: "string" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "tokenId", internalType: "uint256", type: "uint256" }],
    name: "tokenURI",
    outputs: [{ name: "", internalType: "string", type: "string" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [
      { name: "from", internalType: "address", type: "address" },
      { name: "to", internalType: "address", type: "address" },
      { name: "tokenId", internalType: "uint256", type: "uint256" },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [
      { name: "tokenId", internalType: "uint256", type: "uint256" },
      { name: "uri", internalType: "string", type: "string" },
    ],
    name: "updateTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "users",
    outputs: [{ name: "userAddress", internalType: "address", type: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "_amount", internalType: "uint256", type: "uint256" }],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "owner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "approved",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "tokenId",
        internalType: "uint256",
        type: "uint256",
        indexed: true,
      },
    ],
    name: "Approval",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "owner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "operator",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      { name: "approved", internalType: "bool", type: "bool", indexed: false },
    ],
    name: "ApprovalForAll",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "_fromTokenId",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
      {
        name: "_toTokenId",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "BatchMetadataUpdate",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "_tokenId",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "MetadataUpdate",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "from", internalType: "address", type: "address", indexed: true },
      { name: "to", internalType: "address", type: "address", indexed: true },
      {
        name: "tokenId",
        internalType: "uint256",
        type: "uint256",
        indexed: true,
      },
    ],
    name: "Transfer",
  },
  {
    type: "error",
    inputs: [
      { name: "sender", internalType: "address", type: "address" },
      { name: "tokenId", internalType: "uint256", type: "uint256" },
      { name: "owner", internalType: "address", type: "address" },
    ],
    name: "ERC721IncorrectOwner",
  },
  {
    type: "error",
    inputs: [
      { name: "operator", internalType: "address", type: "address" },
      { name: "tokenId", internalType: "uint256", type: "uint256" },
    ],
    name: "ERC721InsufficientApproval",
  },
  {
    type: "error",
    inputs: [{ name: "approver", internalType: "address", type: "address" }],
    name: "ERC721InvalidApprover",
  },
  {
    type: "error",
    inputs: [{ name: "operator", internalType: "address", type: "address" }],
    name: "ERC721InvalidOperator",
  },
  {
    type: "error",
    inputs: [{ name: "owner", internalType: "address", type: "address" }],
    name: "ERC721InvalidOwner",
  },
  {
    type: "error",
    inputs: [{ name: "receiver", internalType: "address", type: "address" }],
    name: "ERC721InvalidReceiver",
  },
  {
    type: "error",
    inputs: [{ name: "sender", internalType: "address", type: "address" }],
    name: "ERC721InvalidSender",
  },
  {
    type: "error",
    inputs: [{ name: "tokenId", internalType: "uint256", type: "uint256" }],
    name: "ERC721NonexistentToken",
  },
] as const;